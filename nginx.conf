# This is a basic Nginx configuration for development purposes.
# It's intended to be used with a local setup, potentially with Docker Compose.
# For production, use deployment/nginx-production.conf

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Upstream to forward requests to the Next.js application
    # Assumes Next.js is running on port 3000
    upstream nextjs_app {
        server host.docker.internal:3000; # For Docker Desktop on Mac/Windows
        # server 172.17.0.1:3000; # For Linux Docker (replace with actual bridge IP if needed)
        # server localhost:3000; # If Nginx is on the same host as Next.js
        keepalive 64;
    }

    server {
        listen 80;
        server_name localhost 127.0.0.1; # Listen on localhost for development

        # Serve static files from the 'public' directory
        # In a Docker setup, this would be volume mounted
        root /usr/share/nginx/html/public; # Adjust this path if your public folder is elsewhere

        # Serve Next.js static assets (e.g., /_next/static)
        location /_next/static {
            # This path should point to the .next/static directory inside your Next.js build
            # If running Next.js in a separate container, you might need to volume mount this
            # or serve it from the Next.js app itself. For simplicity, this assumes it's accessible.
            alias /usr/share/nginx/html/.next/static; # Example path
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        location / {
            # Try to serve static files first, then pass to Next.js app
            try_files $uri $uri/ @nextjs_proxy;
        }

        location @nextjs_proxy {
            # Proxy requests to the Next.js application
            proxy_pass http://nextjs_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_pragma $http_authorization;
            proxy_redirect off;
        }

        # Optional: Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /404.html {
            internal;
        }
        location = /50x.html {
            internal;
        }
    }
}
